package de.ifgi.envision.eps.core;

import java.rmi.RemoteException;

import org.apache.axis2.AxisFault;
import org.apache.axis2.client.Options;
import org.apache.axis2.transport.http.HTTPConstants;
import org.apache.log4j.Logger;

import de.ifgi.envision.eps.core.EPSManagerStub.RegisterStatement;
import de.ifgi.envision.eps.core.EPSManagerStub.Start;

public class EPSManagerClientStart {
	
	private static Logger log = Logger.getLogger(EPSManagerClientStart.class); 

	/*
	 * Client to demo the EPSManager
	 * 1. Start the service
	 * 2. Register statements
	 * 3. Register services
	 */
	public static void main(String[] args) {
		try {
			// Initialize the stub
			EPSManagerStub stub = new EPSManagerStub();
			Options options = stub._getServiceClient().getOptions();
			options.setProperty(HTTPConstants.CHUNKED, false);
			
			// 1. Start the service
			Start start = new Start();
			stub.start(start);
			
			// 2. Register statements
			// 2.1 IF the waterflow measurements are up to 3.000 m3/s AND water level exceeds 69,81 mdMA THEN a HighWaterLevel event is created for Nera Mouth (sensor-0001)
			String stm1 = "SELECT obs1, obs2 FROM pattern[every (obs1=SOSObservationEvent(observer.id = 'urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0006', observedProperty = 'urn:ogc:def:phenomenon:OGC:1.0.30:waterflow', value < 3000) -> obs2=SOSObservationEvent(observer.id = 'urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0001', observedProperty = 'urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel', value > 69.81)) ] WHERE obs2.time.between(obs1.time, obs1.time.plus(23 hours 59 min))";
			// 2.2 IF the waterflow is up to 2.000 m3/s AND the water level exceeds 41,22 mdMA THEN a HighWaterLevel event is created for Drobeta Turnu Severin-Kladovo section (sensor-0015)
			String stm2 = "SELECT obs1, obs2 FROM pattern[every ( obs1=SOSObservationEvent(observer.id = 'urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0007', observedProperty = 'urn:ogc:def:phenomenon:OGC:1.0.30:waterflow', value < 2000) -> obs2=SOSObservationEvent(observer.id = 'urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0015', observedProperty = 'urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel', value > 41.22))] WHERE obs2.time.between(obs1.time, obs1.time.plus(23 hours 59 min))";
			// 2.3 IF the waterflow is between 2.000 and 2.500 m3/s AND the water level exceeds 41,37 mdMA THEN a HighWaterLevel event is created for Drobeta Turnu Severin-Kladovo section (sensor-0015)
			String stm3 = "SELECT obs1, obs2 FROM pattern[every ( obs1=SOSObservationEvent(observer.id = 'urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0007', observedProperty = 'urn:ogc:def:phenomenon:OGC:1.0.30:waterflow', value between 2000 and 2500) -> obs2=SOSObservationEvent(observer.id = 'urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0015', observedProperty = 'urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel', value > 41.37))] WHERE obs2.time.between(obs1.time, obs1.time.plus(23 hours 59 min))";
			// Event type
			String eventType = "http://purl.org/ifgi/water/flood#HighWaterLevel";
			
			RegisterStatement registerStatement = new RegisterStatement();
			registerStatement.setStm(stm1);
			registerStatement.setEventType(eventType);
			if (stub.registerStatement(registerStatement).get_return()) {
				System.out.println("Statement 1 registered: IF the waterflow measurements are up to 3.000 m3/s AND water level exceeds 69,81 mdMA THEN a HighWaterLevel event is created for Nera Mouth (sensor-0001)");
			}
			else {
				System.out.println("Statement 1 not registered");
			}
			
			registerStatement.setStm(stm2);
			if (stub.registerStatement(registerStatement).get_return()) {
				System.out.println("Statement 2 registered: IF the waterflow is up to 2.000 m3/s AND the water level exceeds 41,22 mdMA THEN a HighWaterLevel event is created for Drobeta Turnu Severin-Kladovo section (sensor-0015)");
			}
			else {
				System.out.println("Statement 2 not registered");
			}
			
			registerStatement.setStm(stm3);
			if (stub.registerStatement(registerStatement).get_return()) {
				System.out.println("Statement 3 registered: IF the waterflow is between 2.000 and 2.500 m3/s AND the water level exceeds 41,37 mdMA THEN a HighWaterLevel event is created for Drobeta Turnu Severin-Kladovo section (sensor-0015)");
			}
			else {
				System.out.println("Statement 2 not registered");
			}
			
		} catch (AxisFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
