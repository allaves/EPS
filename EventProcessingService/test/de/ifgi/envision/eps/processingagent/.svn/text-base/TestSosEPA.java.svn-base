package de.ifgi.envision.eps.processingagent;


import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.junit.Test;
import org.n52.oxf.serviceAdapters.OperationResult;

import com.espertech.esper.client.EPServiceProvider;
import com.espertech.esper.client.EPStatement;

import de.ifgi.envision.eps.producer.SOSEventProducer;
import de.ifgi.envision.eps.push.EventPusher;
import de.ifgi.envision.eps.event.SOSObservationEvent;
import de.ifgi.envision.eps.core.EventProcessingServiceProvider;
import de.ifgi.envision.eps.service.SOS;
import de.ifgi.envision.eps.subscriber.HighWaterLevelEventSubscriber;
import de.ifgi.envision.eps.subscriber.SOSObservationEventSubscriber;


public class TestSosEPA {
	private final static String SAMPLE_SOS = "data/sosWaterLevel4Bazias_Jan06-Jan12.xml";
	
	//private SOSEventProducer eventProducer;
	private OperationResult result_waterflow, result_waterlevel;
	
	public TestSosEPA() {
		// Get instance of EPServiceProvider
		//EPServiceProvider epServiceProvider = EventProcessingServiceProvider.getEPServiceProvider();
		// Set configuration
		//EventProcessingServiceProvider.getEPServiceProvider().getEPAdministrator().getConfiguration().addEventType(SOSObservationEvent.class);
		// Create event producer
		//eventProducer = new SOSEventProducer();
		//TimeOrderEPA.initiate();
		//SosEPA.initiate();
		//SmederevoEPA.initiate();
//		SOS sos_waterflow = new SOS("http://194.102.135.23/EnvisionSOS/sos", "1.0.0", "WATER_FLOW", "urn:ogc:def:phenomenon:OGC:1.0.30:waterflow", null, null, new String[]{"urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0011"}, null);
//		result_waterflow = sos_waterflow.getObservations();
//		
//		SOS sos_waterlevel = new SOS("http://194.102.135.23/EnvisionSOS/sos", "1.0.0", "GAUGE_HEIGHT", "urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel", null, null, new String[]{"urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0011"}, null);
//		result_waterlevel = sos_waterlevel.getObservations();
		// request http://194.102.135.23/52nSOSv3/sos?service=SOS&request=getObservation&offering=Bazias&OBSERVEDPROPERTY=urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel&VERSION=1.0.0&RESPONSEFORMAT=text/xml;subtype="om/1.0.0"
		//result = sos.getObservations(null, "Bazias", "urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel", null, null, new String[]{"urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0004"}, "foi_0005");
		//result = sos.getObservations("1.0.0", "GAUGE_HEIGHT", "urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel", null, null, new String[]{"urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0001"}, null);
//		Date begin = null;
//		Date end = null;
//		try {
//			DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
//			begin = formatter.parse("2012-08-01 07:00:00");
//			end = formatter.parse("2012-08-01 07:00:00");
//		} catch (ParseException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		result_waterflow = sos_waterflow.getObservations("1.0.0", "WATER_FLOW", "urn:ogc:def:phenomenon:OGC:1.0.30:waterflow", null, null, new String[]{"urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0011"}, null);
//		result_waterlevel = sos_waterflow.getObservations("1.0.0", "GAUGE_HEIGHT", "urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel", null, null, new String[]{"urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0011"}, null);
		//result = sos.getObservations("1.0.0", "RAIN_GAUGE", "urn:x-ogc:def:property:OGC::Precipitation1Hour", null, null, null, null);
	}
	
	@Test
	public void testSosEPA() {
		EventPusher.getEventPusher().initConnection();
		
//		EPStatement epStatement = EventProcessingServiceProvider.getEPServiceProvider().getEPAdministrator().createEPL(
//				"SELECT waterflow_obs, waterlevel_obs " +
//				"FROM pattern[every waterflow_obs=SOSObservationEvent(observer.id='urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0011', " +
//					"observedProperty='urn:ogc:def:phenomenon:OGC:1.0.30:waterflow', value>2429) " +
//					"-> every waterlevel_obs=SOSObservationEvent(observer.id = waterflow_obs.observer.id, " +
//					"observedProperty='urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel', value>439)] " +
//					"WHERE waterlevel_obs.time.between(waterflow_obs.time, waterflow_obs.time.plus(23 hours 59 min))");
//		epStatement.setSubscriber(new HighWaterLevelEventSubscriber());	
		
		EPStatement epStatement = EventProcessingServiceProvider.getEPServiceProvider().getEPAdministrator().createEPL(
				"SELECT waterflow_obs, waterlevel_obs " +
				"FROM SOSObservationEvent(observer.id='urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0011', " +
					"observedProperty='urn:ogc:def:phenomenon:OGC:1.0.30:waterflow', value>2429).win:length(1) waterflow_obs, " +
					"SOSObservationEvent(observedProperty='urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel', value>439).win:length(1) waterlevel_obs " +
					"WHERE waterlevel_obs.observer.id = waterflow_obs.observer.id AND " +
					"waterlevel_obs.time.between(waterflow_obs.time, waterflow_obs.time.plus(23 hours 59 min))");
		epStatement.setSubscriber(new HighWaterLevelEventSubscriber());	
		
//		EPStatement epStatement = EventProcessingServiceProvider.getEPServiceProvider().getEPAdministrator().createEPL("SELECT a, b FROM pattern[every a=SOSObservationEvent(observedProperty='urn:ogc:def:phenomenon:OGC:1.0.30:waterflow', value>2429) -> every b=SOSObservationEvent(observedProperty='urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel', value>439)] WHERE b.time.between(a.time, a.time.plus(23 hours 59 min))");
//		epStatement.setSubscriber(new SOSObservationEventSubscriber());	
		
//		SOS sos_waterflow = new SOS("http://194.102.135.23/EnvisionSOS/sos", "1.0.0", "WATER_FLOW", "urn:ogc:def:phenomenon:OGC:1.0.30:waterflow", null, null, new String[]{"urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0011"}, null);
//		result_waterflow = sos_waterflow.getObservations();
//		sos_waterflow.getEventProducer().parseXml(null, result_waterflow);	
//		
//		SOS sos_waterlevel = new SOS("http://194.102.135.23/EnvisionSOS/sos", "1.0.0", "GAUGE_HEIGHT", "urn:ogc:def:phenomenon:OGC:1.0.30:waterlevel", null, null, new String[]{"urn:ogc:object:feature:Sensor:CSRO:csro-sensor-0011"}, null);
//		result_waterlevel = sos_waterlevel.getObservations();
//		sos_waterlevel.getEventProducer().parseXml(null, result_waterlevel);
		
		EventPusher.getEventPusher().closeConnection();
		
		
	}
}

